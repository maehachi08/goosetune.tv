# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_ROOT_HOST: '%'
          MYSQL_DATABASE: goosetunetv_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u goosetunetv -pgoosetunetv"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.5'
          bundler-cache: true

      - name: Setup Database
        run: |
          bin/rails db:create
          bin/rails db:schema:load
        env:
          DATABASE_USERNAME: root
          DATABASE_PASSWORD: password
          DATABASE_NAME: goosetunetv_test
          DATABASE_HOST: 127.0.0.1
          RAILS_ENV: test

      # Comment since goosetune.tv doesn't use assets.
      #- name: Precompile assets
      #  run: RAILS_ENV=test bundle exec rails assets:precompile
      #  env:
      #    DATABASE_HOST: 127.0.0.1
      #    RAILS_ENV: test

      - name: Run tests
        run: bin/rails test
        env:
          DATABASE_USERNAME: root
          DATABASE_PASSWORD: password
          DATABASE_NAME: goosetunetv_test
          DATABASE_HOST: 127.0.0.1
          RAILS_ENV: test

