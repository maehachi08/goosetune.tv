<!DOCTYPE html>
<html>
<head>
  <title>GoosetuneTV</title>
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>
  <%= display_meta_tags({
    # title and site are attached, and it's indicated as a title tag.
    #   - site + separator + title
    :separator   => "",
    # title and site are attached reversely.
    #   - title + separator + site
    #   - true/false
    :reverse     => "",
    # page title
    :title       =>  ('GoosetuneTV'),
    :site        => "",
    # called meta tags as they are not displayed by the browsers as that of titles.
    #   - Important for SEO
    :description => 'Goosehouse動画を検索できるまとめ - GoosetuneTV -',
    # not important for seo, because search engine have not referances keyword meta tags
    :keyword     => 'goosehouse Goosehouse',
    # CSS Device Adaptation
    :viewport    => "width=device-width,
                     maximum-scale=1.0,
                     minimum-scale=0.5,
                     user-scalable=yes,
                     initial-scale=1.0"
  }) %>

  <!-- oepn graph protocol -->
  <!-- refs http://html-five.jp/84/ -->
  <meta property="og:title"       content="Goosehouse動画を検索できるまとめ - GoosetuneTV -"/>
  <meta property="og:description" content="色んな方法でGoosehouse動画を検索できるまとめサイトです"/>
  <meta property="og:image"       content="http://goosetune.tv/images/goosehouse_goods.jpg"/>
  <meta property="og:url"         content="http://goosetune.tv/"/>
  <meta property="og:type"        content="song"/>
  <meta property="og:site_name"   content="Goosehouse動画を検索できるまとめ - GoosetuneTV -"/>

  <script src="/jquery.min.js"></script>

  <script src="/bundle.js"></script>
  <script src="/stuff.js" async></script>


  <!-- font-awesome -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.10/css/all.css"
                         integrity="sha384-+d0P83n9kaQMCwj8F4RJB66tzIwOKmrdb46+porD/OvrJ+37WqIM7UoBtwHO6Nlg" crossorigin="anonymous">


  <!-- flat-ui 2.2.2 -->
  <!-- I want to use checkbox however removed it 2.2.3 or later. -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flat-ui/2.2.2/css/flat-ui.min.css" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/flat-ui/2.2.2/js/flat-ui.min.js"></script>

  <link rel="stylesheet" href="/index.css" />

  <!-- semanbtic-ui-css -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/semantic-ui@2.5.0/dist/semantic.min.css" />
  <script src="https://cdn.jsdelivr.net/npm/semantic-ui@2.5.0/dist/semantic.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/semantic-ui@2.5.0/components/visibility.min.css">

  <script>
      // webpackでbundleすると正常動作しないので外出ししている
      $(document).ready(function() {
          $('select.dropdown').dropdown();
          $('#refine_members_research').on('click', function() {
              $('#refine_search_modal').modal('show');
          });
          $('#js-sidebar').click(function() {
            $('.ui.sidebar').sidebar('toggle');
          });
        $('.ui.dropdown').dropdown();

        // $('.ui.sidebar').sidebar({
        //   context: $('body'),
        //   transition: 'overlay',
        //   dimPage: true
        // });

        $('.ui.accordion').accordion();



    console.log("Document ready");

    // モバイル用のみ初期化（context 修正）
    $('.ui.sidebar.mobile-sidebar').sidebar({
      context: $('.ui.pushable'),
      transition: 'overlay',
      dimPage: true
    });

    $('#mobile-menu-toggle').on('click', function () {
      console.log("Mobile menu toggle clicked");
      $('.ui.sidebar.mobile-sidebar').sidebar('toggle');
    });

    // アニメーション初期化をjQuery readyに追加
    console.log("Initializing card animations...");
    initCardAnimations();

      });

      // カードアニメーション初期化関数
      function initCardAnimations() {
        console.log('=== Starting card animation initialization ===');
        
        // まず .masonry クラスがあるかチェック
        const masonryContainers = $('.masonry');
        console.log('Found masonry containers:', masonryContainers.length);
        
        if (masonryContainers.length === 0) {
          console.log('No masonry containers found. Checking all containers...');
          $('[id*="masonry"], [class*="masonry"], .ui.cards').each(function() {
            console.log('Found potential masonry container:', this.className, this.id);
          });
        }
        
        masonryContainers.each(function(containerIndex) {
          const container = this;
          console.log(`Processing masonry container ${containerIndex}:`, container);
          
          const items = $(container).find('.masonry-item');
          console.log(`Found ${items.length} masonry items in container ${containerIndex}`);
          
          if (items.length === 0) {
            console.log('No masonry-item found. Checking for .ui.card...');
            const cardItems = $(container).find('.ui.card');
            console.log(`Found ${cardItems.length} ui.card items`);
          }
          
          // 既存のカードにアニメーションを適用
          items.each(function(index, item) {
            console.log(`Setting up animation for item ${index}:`, item.className);
            
            // 非常にシンプルなテストアニメーション
            $(item).css({
              'opacity': '0.3',
              'background-color': 'yellow',
              'border': '2px solid red'
            });
            
            setTimeout(() => {
              console.log(`Animating item ${index}`);
              $(item).css({
                'opacity': '1',
                'background-color': '',
                'border': '',
                'transition': 'all 1s ease'
              });
            }, index * 200 + 500);
          });
        });
        
        console.log('=== Card animation initialization complete ===');
      }
  </script>

<style>
.masonry-item {
}

/* au.com style navigation */
.au-style-navigation {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
  border: none !important;
  box-shadow: 0 4px 20px rgba(0,0,0,0.1) !important;
}

.au-style-navigation .item {
  border-bottom: none !important;
  padding: 12px 20px !important;
  margin: 4px 8px !important;
  border-radius: 8px !important;
  transition: all 0.3s ease !important;
  color: rgba(255,255,255,0.9) !important;
}

.au-style-navigation .item:hover {
  background: rgba(255,255,255,0.15) !important;
  color: white !important;
  transform: translateX(5px);
}

.au-style-navigation .item a {
  color: rgba(255,255,255,0.9) !important;
  font-weight: 500 !important;
  text-decoration: none !important;
}

.au-style-navigation .item a:hover {
  color: white !important;
}

.au-style-navigation .ui.accordion .title {
  color: rgba(255,255,255,0.9) !important;
  font-weight: 600 !important;
  padding: 12px 0 !important;
}

.au-style-navigation .ui.accordion .title:hover {
  color: white !important;
}

.au-style-navigation .ui.accordion .content {
  background: rgba(255,255,255,0.1) !important;
  border-radius: 8px !important;
  margin: 8px 0 !important;
}

.au-style-navigation .ui.accordion .content .menu .item {
  background: transparent !important;
  margin: 2px 4px !important;
  font-size: 0.9em !important;
}

.au-style-navigation .ui.accordion .content .menu .item:hover {
  background: rgba(255,255,255,0.1) !important;
}

.au-style-navigation .ui.search .ui.input {
  background: rgba(255,255,255,0.15) !important;
  border: none !important;
  border-radius: 25px !important;
  margin: 8px 0 !important;
}

.au-style-navigation .ui.search .ui.input input {
  background: transparent !important;
  color: white !important;
  border: none !important;
}

.au-style-navigation .ui.search .ui.input input::placeholder {
  color: rgba(255,255,255,0.7) !important;
}

.au-style-navigation .ui.search .search.icon {
  color: rgba(255,255,255,0.8) !important;
}

.au-style-navigation .ui.button {
  background: rgba(255,255,255,0.2) !important;
  color: white !important;
  border: 1px solid rgba(255,255,255,0.3) !important;
  border-radius: 20px !important;
  transition: all 0.3s ease !important;
}

.au-style-navigation .ui.button:hover {
  background: rgba(255,255,255,0.3) !important;
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(0,0,0,0.2);
}

/* au.com style tablet navigation */
.au-style-tablet-nav {
  background: linear-gradient(90deg, #667eea 0%, #764ba2 100%) !important;
  border: none !important;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1) !important;
}

.au-style-tablet-nav .item {
  color: white !important;
  font-weight: 500 !important;
  padding: 14px 20px !important;
  transition: all 0.3s ease !important;
  border-radius: 0 !important;
}

.au-style-tablet-nav .item:hover {
  background: rgba(255,255,255,0.15) !important;
  transform: translateY(-2px);
}

/* au.com style mobile navigation */
.au-style-mobile-nav {
  background: linear-gradient(90deg, #667eea 0%, #764ba2 100%) !important;
  border: none !important;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1) !important;
}

.au-style-mobile-nav .item {
  color: white !important;
  font-weight: 600 !important;
}

.au-style-mobile-nav .header.item {
  font-size: 1.2em !important;
  letter-spacing: 0.5px !important;
}

.au-style-mobile-nav .bars.icon {
  font-size: 1.3em !important;
}

/* Masonry & Semantic UI integration */
.masonry {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  justify-content: center;
  width: 100%;
  margin: 0 auto;
  /* スムーズなレイアウト変更のためのトランジション */
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.masonry-item {
  flex: 0 0 auto;
  margin: 10px;
  width: calc(50% - 20px);
  max-width: 300px;
  min-width: 150px;
  min-height: 250px;
  /* カード移動時のスムーズなアニメーション */
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1), 
              transform 0.3s ease, 
              box-shadow 0.3s ease;
}

/* 初期状態（JavaScriptで制御） - Semantic UIより高い優先度 */
.ui.card.masonry-item.animate-in {
  opacity: 0 !important;
  transform: translateY(30px) scale(0.95) !important;
  transition: opacity 0.6s cubic-bezier(0.4, 0, 0.2, 1), 
              transform 0.6s cubic-bezier(0.4, 0, 0.2, 1) !important;
  /* Semantic UIのtransformプロパティを上書き */
  will-change: opacity, transform;
}

/* アニメーション完了状態 */
.ui.card.masonry-item.animate-in.show {
  opacity: 1 !important;
  transform: translateY(0) scale(1) !important;
}

/* カードの出現アニメーション */
@keyframes slideInUp {
  0% {
    opacity: 0 !important;
    transform: translateY(30px) scale(0.95) !important;
  }
  50% {
    opacity: 0.5 !important;
    transform: translateY(15px) scale(0.97) !important;
  }
  100% {
    opacity: 1 !important;
    transform: translateY(0) scale(1) !important;
  }
}

/* 新しく追加されるカードのアニメーション */
.masonry-item.new-item {
  animation: slideInFade 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes slideInFade {
  0% {
    opacity: 0;
    transform: translateY(50px) scale(0.8);
  }
  50% {
    opacity: 0.5;
    transform: translateY(25px) scale(0.9);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* レイアウト変更時のスムーズな移動 */
.masonry-item.layout-changing {
  transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* カードのスタッガード（時差）アニメーション - JSで制御するためコメントアウト */
/*
.masonry-item:nth-child(1) { animation-delay: 0.1s; }
.masonry-item:nth-child(2) { animation-delay: 0.2s; }
.masonry-item:nth-child(3) { animation-delay: 0.3s; }
.masonry-item:nth-child(4) { animation-delay: 0.4s; }
.masonry-item:nth-child(5) { animation-delay: 0.5s; }
.masonry-item:nth-child(6) { animation-delay: 0.6s; }
.masonry-item:nth-child(7) { animation-delay: 0.7s; }
.masonry-item:nth-child(8) { animation-delay: 0.8s; }
.masonry-item:nth-child(9) { animation-delay: 0.9s; }
.masonry-item:nth-child(10) { animation-delay: 1.0s; }
*/

/* デバッグ用: アニメーション状態確認 */
.masonry-item.debug-animation {
  border: 2px solid red !important;
  background: yellow !important;
}

.masonry-item:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 25px rgba(0,0,0,0.15);
}

.masonry-item .ui.card {
  width: 100%;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  border-radius: 12px;
  overflow: hidden;
  transition: all 0.3s ease;
}

.masonry-item .ui.card .image img {
  transition: transform 0.3s ease;
}

.masonry-item .ui.card:hover .image img {
  transform: scale(1.05);
}

.masonry-item .ui.card .content {
  padding: 15px;
}

.masonry-item .ui.card .header {
  font-size: 1.1em;
  font-weight: 600;
  line-height: 1.3;
  color: #2c3e50;
  margin-bottom: 8px;
}

.masonry-item .ui.card .extra.content {
  background: #f8f9fa;
  color: #6c757d;
  font-size: 0.9em;
  border-top: 1px solid #e9ecef;
}

/* ウィンドウリサイズ時のスムーズな移動 */
@media (prefers-reduced-motion: no-preference) {
  .masonry {
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .masonry-item {
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1), 
                transform 0.3s ease, 
                box-shadow 0.3s ease,
                width 0.4s ease,
                margin 0.4s ease;
  }
}

/* 新しいアイテムの表示状態 */
.masonry-item.loaded {
  opacity: 1 !important;
  transform: translateY(0) scale(1) !important;
}

/* ホバー時により滑らかな動き - Semantic UIのhoverより優先 */
.ui.card.masonry-item:hover {
  transform: translateY(-8px) scale(1.02) !important;
  box-shadow: 0 12px 30px rgba(0,0,0,0.15) !important;
  z-index: 10 !important;
}

/* Semantic UIのデフォルトhoverを無効化 */
.ui.cards a.card.masonry-item:hover,
.ui.link.card.masonry-item:hover,
a.ui.card.masonry-item:hover {
  transform: translateY(-8px) scale(1.02) !important;
  background: #fff !important;
  border: none !important;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .masonry-item {
    width: calc(100% - 20px);
    min-width: 150px;
    max-width: none;
    /* モバイルでのアニメーション調整 */
    animation-duration: 0.4s;
  }
  
  .masonry-item:nth-child(n+6) {
    animation-delay: 0.6s;
  }
}

@media (min-width: 769px) and (max-width: 1024px) {
  .masonry-item {
    width: calc(50% - 20px);
    min-width: 150px;
    max-width: 250px;
  }
}

@media (min-width: 1025px) {
  .masonry-item {
    width: calc(33.333% - 20px);
    min-width: 150px;
    max-width: 220px;
  }
}

@media (min-width: 1400px) {
  .masonry-item {
    width: calc(25% - 20px);
    min-width: 150px;
    max-width: 200px;
  }
}

/* アクセシビリティ: アニメーションを減らしたい場合 */
@media (prefers-reduced-motion: reduce) {
  .masonry-item {
    animation: none;
    transition: none;
    opacity: 1;
    transform: none;
  }
  
  .masonry-item:hover {
    transform: none;
  }
}

/* Loading status styling */
.page-load-status {
  display: none;
  text-align: center;
  padding: 20px;
}

.page-load-status.infinite-scroll-request {
  display: block;
}

.loader-ellips {
  font-size: 20px;
  position: relative;
  width: 4em;
  height: 1em;
  margin: 10px auto;
}

.loader-ellips__dot {
  display: block;
  width: 1em;
  height: 1em;
  border-radius: 0.5em;
  background: #667eea;
  position: absolute;
  animation: load 0.8s infinite alternate;
}

.loader-ellips__dot:nth-child(2) { left: 1.5em; animation-delay: 0.2s; }
.loader-ellips__dot:nth-child(3) { left: 3em; animation-delay: 0.4s; }

@keyframes load {
  0% { opacity: 1; transform: scale(1); }
  100% { opacity: 0.2; transform: scale(0.3); }
}


  @media only screen and (max-width: 991px) {
    .ui.left.fixed.menu.computer.only {
      display: none !important;
    }
    .computer.only {
      display: none !important;
    }
  }

  @media only screen and (min-width: 992px) {
    .computer.only { display: block !important; }
    .tablet.only, .mobile.only { display: none !important; }
    html, body {
      margin: 0;
      padding: 0;
      height: 100%;
    }

    .ui.pushable {
      display: flex;
      min-height: 100vh;
    }

    .pusher {
      flex-grow: 1;
      overflow: auto;
      padding: 1rem;
    }

    .ui.pushable > .pusher {
      position: static;         /* fixed や absolute になっていないか確認 */
      overflow: visible;        /* overflow が hidden になっていないか確認 */
    }

    .ui.left.vertical.menu.computer.only {
      position: sticky;
      top: 0; /* 画面上部からの距離 */
      align-self: flex-start;
      height: fit-content;
      z-index: 1000; /* メニューが他の要素の後ろに行かないように */
      height: fit-content;
      width: 220px;
      flex-shrink: 0;
    }

    .sidebar-fixed {
      position: sticky;
      top: 0;
      height: 100vh;
      overflow-y: auto;
      flex-shrink: 0;
      align-self: flex-start;
      width: 220px; /* 必要に応じて調整 */
    }

  }
  @media only screen and (min-width: 768px) and (max-width: 991px) {
    .tablet.only { display: block !important; }
    .computer.only, .mobile.only { display: none !important; }
    .ui.top.fixed.menu.tablet.only {
      display: flex !important;
      flex-wrap: nowrap;
      overflow-x: auto;
      white-space: nowrap;
    }
    .ui.top.fixed.menu.tablet.only .item {
      flex: 0 0 auto;
      white-space: nowrap;
    }
  }
  @media only screen and (max-width: 767px) {
    .mobile.only {
      display: block !important;
    }
    .computer.only,
    .tablet.only {
      display: none !important;
    }
    .ui.top.fixed.menu.mobile.only .item {
      flex: 0 0 auto;
      white-space: nowrap;
    }
    .ui.top.fixed.menu.mobile.only {
      width: 100vw;
    }
    .ui.left.fixed.menu.computer.only {
      display: none !important;
    }
  }

</style>

</head>
<body>


<div class="ui pushable">

<!-- Navigation for computer only -->
<%= render :partial => 'shared/navgation/computer' %>

<!-- 💡 ② 上部水平メニュー（タブレット用） -->
<div class="ui top fixed menu tablet only au-style-tablet-nav" style="z-index: 1000; display: flex; flex-wrap: nowrap; overflow-x: auto; white-space: nowrap;">
  <a class="item" href="/">トップ</a>
  <a class="item" href="/members">メンバー</a>
  <a class="item" href="/youtubes">YouTube</a>
  <a class="item" href="/ustreams">Ustream</a>
  <a class="item" href="/artists">アーティスト</a>
</div>

<!-- 💡 ③ ハンバーガー＋サイドバー（モバイル用） -->
<!-- トップバー（アイコン表示） -->
<div class="ui top fixed menu mobile only au-style-mobile-nav" style="z-index: 1000; display: flex; align-items: center; justify-content: space-between;">
  <div class="menu">
    <a class="item" id="mobile-menu-toggle" style="flex: 0 0 auto;"><i class="bars icon"></i></a>
    <div class="header item" style="flex: 1 1 auto; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">GoosetuneTV</div>
  </div>
</div>


<!-- サイドバー本体（モバイル用） -->
<div class="ui sidebar vertical menu mobile-sidebar mobile only">
  <!-- Navigation -->
</div>






    <!-- Heder Menu -->

<!--
    <div class="ui fixed borderless menu">
      <div class="menu">
        <div id="js-sidebar" class="item"><i class="icon large grey content"></i></div>
        <a class="header item" href="/">GoosetuneTV</a>
      </div>
    </div>
-->


    <!-- Main -->
    <div class="pusher" style="padding-top: 50px;">
          <div id="bottom-editarea">
            <p id="pageTop"><a href="#"><i class="fa fa-chevron-up"></i></a></p>
          </div>

          <!-- <div class="jumbotron"></div> -->
          <%= yield %>

          <!-- Footer -->
          <footer style="position: relative; top: 100px;">
            <div class="jumbotron"></div>
            <div id="title">
              <p class="text-muted">
                <small>
                  <%= "#{Date.today.year} GoosetuneTV" %>
                  <br>
                  <%= "Goosehouse動画を検索できるまとめ" %>
                </small>
              </p>
            </div>
          </footer>
    </div>

</div>

</body>
</html>
